AWSTemplateFormatVersion: "2010-09-09"
Description: "Bedrock application infra template"
Resources:
  LamdaCodeBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: "bedrock-app-lambda-code-bucket"
      VersioningConfiguration:
        Status: "Enabled"
      LifecycleConfiguration:
        Rules:
          - Id: DeleteOldObjects
            Status: "Enabled"
            NoncurrentVersionExpirationInDays: 90
  LambdaDynamoGetRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      Policies:
        - PolicyName: DynamoDBAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "dynamodb:GetItem"
                  - "dynamodb:Query"
                  - "dynamodb:Scan"
                Resource: "*"
  LambdaDynamoGetFunction:
    Type: AWS::Lambda::Function
    DependsOn:
      - "LamdaCodeBucket"
      - "LambdaDynamoGetRole"
    Properties:
      Architectures:
        - "arm64"
      Code:
        S3Bucket: !Ref LamdaCodeBucket
        S3Key: "get_conversation.zip"
      Description: "get conversation Lambda function with DynamoDB get access."
      FunctionName: "get_conversation"
      Handler: "bootstrap"
      MemorySize: 128
      PackageType: "Zip"
      Role: !GetAtt LambdaDynamoGetRole.Arn
      Runtime: "provided.al2023"
      Timeout: 3
